# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: Build
  steps:
  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.11'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      tasks: 'build'
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(System.DefaultWorkingDirectory)/build/libs/bert-1.0-SNAPSHOT-all.jar'
      artifactName: 'bert'
  #- task: PublishCodeCoverageResults@1
  #  inputs:
  #    codeCoverageTool: "JaCoCo"
  #    summaryFileLocation: "$(System.DefaultWorkingDirectory)/**/site/jacoco/jacoco.xml"
  #    reportDirectory: "$(System.DefaultWorkingDirectory)/**/site/jacoco"
  #    failIfCoverageEmpty: true
#- deployment: deploy
#  dependsOn: build
#  condition: succeeded()
#  environment: 'bert-bot-dev'
