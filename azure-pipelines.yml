# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '7033b300-b62b-47c4-8f3b-ce5c5927c260'
  imageRepository: 'shawnstrongbertbot'
  containerRegistry: 'bertbotregistry22180.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/pipelines/Dockerfile'
  tag: '$(Build.BuildId)'
  
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:  
  - job: GradleBuild
    displayName: Gradle-Build
    steps:
    - task: Gradle@2
      inputs:
        workingDirectory: ''
        gradleWrapperFile: 'gradlew'
        gradleOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/TEST-*.xml'
        tasks: 'build'
    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(System.DefaultWorkingDirectory)/build/libs/bert-1.0-SNAPSHOT-all.jar'
        artifactName: 'bert'
  - job: DockerBuild
    displayName: Docker-Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        buildContext: $(Build.ArtifactStagingDirectory)
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
- stage: 'Deploy'
  displayName: 'Deploy the container'
  dependsOn: Build
  jobs:
  - job: 'Deploy'
    displayName: 'Deploy job'
    pool:
      vmImage: 'ubuntu-18.04'
    #variables:
    #- group: Release
    steps:
    - task: AzureWebAppContainer@1
      inputs:
       appName: $(webAppName)
       azureSubscription: 'Resource Manager - bert-bot'
       imageName: $(registryName)/$(webRepository):$(build.buildId)
